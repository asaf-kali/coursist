# Generated by Django 3.0.6 on 2020-05-25 13:25

from decimal import Decimal

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0011_update_proxy_permissions"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="CoursistUser",
            fields=[
                ("id", models.AutoField(editable=False, primary_key=True, serialize=False),),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login"),),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={"unique": "A user with that username already exists."},
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name="username",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=30, verbose_name="first name"),),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="last name"),),
                ("email", models.EmailField(blank=True, max_length=254, verbose_name="email address"),),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined"),),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"verbose_name": "user", "verbose_name_plural": "users", "abstract": False,},
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("id", models.AutoField(editable=False, primary_key=True, serialize=False),),
                ("course_number", models.IntegerField(unique=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("credits", models.IntegerField(default=0)),
            ],
            options={"ordering": ["course_number"],},
        ),
        migrations.CreateModel(
            name="StudyBlock",
            fields=[
                ("id", models.AutoField(editable=False, primary_key=True, serialize=False),),
                ("name", models.CharField(max_length=50)),
                ("min_credits", models.IntegerField()),
                ("courses", models.ManyToManyField(to="academic_helper.Course")),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="StudyPlan",
            fields=[
                ("id", models.AutoField(editable=False, primary_key=True, serialize=False),),
                ("name", models.CharField(max_length=50)),
                ("credits", models.IntegerField()),
                ("is_public", models.BooleanField(default=True)),
                ("blocks", models.ManyToManyField(to="academic_helper.StudyBlock")),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="ExtendedRating",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID",),),
                ("count", models.PositiveIntegerField(default=0)),
                ("total", models.PositiveIntegerField(default=0)),
                ("average", models.DecimalField(decimal_places=3, default=Decimal("0"), max_digits=6),),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.ContentType",
                    ),
                ),
            ],
            options={"abstract": False, "unique_together": {("content_type", "object_id")},},
        ),
        migrations.CreateModel(
            name="CompletedCourse",
            fields=[
                ("id", models.AutoField(editable=False, primary_key=True, serialize=False),),
                ("grade", models.IntegerField(blank=True, null=True)),
                (
                    "block",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="academic_helper.StudyBlock",),
                ),
                (
                    "course",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="academic_helper.Course",),
                ),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,),),
            ],
            options={"unique_together": {("user", "course")},},
        ),
    ]
